{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 3,
    "Custom": "",
    "Description": "The method OKButton_Click in class SetFilterForm should be :\n\n```C#\ncase FilterType.Integer:\ncase FilterType.Float:\n\n        String num = this.val1contol.Text;\n\n        if (this.filterType == FilterType.Float)\n            num = num.Replace(\",\", \".\");\n\n        if (this.FilterTypeComboBox.Text == this.RM.GetString(\"setfilterform_filtertypecombobox_equal\"))\n             this.filterString += \"= \" + num;\n        else if (this.FilterTypeComboBox.Text == this.RM.GetString(\"setfilterform_filtertypecombobox_between\"))\n               {\n                   double num1;\n                   double num2;\n                   if (double.TryParse(num, out num1) && double.TryParse(this.val2contol.Text, out num2))\n                      {\n                          if (num1 > num2)\n                          {\n                              this.val1contol.Text = num2.ToString();\n                              num = num2.ToString();\n                              this.val2contol.Text = num1.ToString();\n                          }\n                      }\n   this.filterString += \">= \" + num + \" AND \" + column + \"<= \" + (this.filterType == FilterType.Float ? this.val2contol.Text.Replace(\",\", \".\") : this.val2contol.Text);\n   }\n```",
    "LastUpdatedDate": "2014-05-26T20:39:40.733-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "adgv",
    "ReportedDate": "2014-01-02T12:44:31.077-08:00",
    "Status": {
      "Name": "Resolved",
      "Id": 7
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Filtering on numbers returns no result when num2 is greater than num1",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 1347
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Yes, it`s. I removed the automatic inversion of numbers as in previous versions.But what do you expect when you want to get the number >5 and Also it allows us to simplify the method of comparison",
      "PostedDate": "2014-01-02T19:10:09.517-08:00",
      "Id": 184366
    },
    {
      "Message": "I agree with you, Mathematically, there is no numbers >5 AND Lambda users only see the UI. And they ask for numbers between 5 and 1. In their mind, they want to show 2,3,4. Especially, if data are sorting \"From bigger to smaller\".\r\n\r\nYou should either, take care of this automatic inversion, or either, make the UI more clearer for the \"between\" case.",
      "PostedDate": "2014-01-02T22:33:26.71-08:00",
      "Id": 184367
    },
    {
      "Message": "you right, i do something in next release",
      "PostedDate": "2014-01-02T23:49:15.99-08:00",
      "Id": 184368
    }
  ]
}